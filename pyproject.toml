[tool.poetry]
name = "project"
version = "0.0.1"
description = "django.wtf"
authors = ["Dani Hodovic <dani-hodovic@example.com>"]

[tool.poetry.dependencies]
python = "^3.11"
psycopg2 = "^2.9.3"
whitenoise = "^6.0.0"
django-anymail = "^8.5"
gunicorn = "^20.1.0"
django-extensions = "^3.1.5"
django-environ = "^0.8.1"
django-model-utils = "^4.2.0"
django-meta = { git = "https://github.com/ivanchenkodmitry/django-meta", rev = "patch-1" }
django-health-check = "^3.16.5"
django-allauth = "^0.48.0"
django-filter = "^21.1"
django-debug-toolbar = "^3.2.4"
celery = "^5.2.3"
Django = "^4.0.2"
django-celery-beat = "^2.4.0"
django-allauth-ui = "^0.0.15"
django-widget-tweaks = "^1.4.12"
redis = "^4.1.3"
requests = "^2.27.1"
django-redis = "^5.2.0"
ptipython = "^1.0.1"
ptpython = "^3.0.20"
argon2-cffi = "^21.3.0"
django-constance = { extras = ["database"], version = "^2.8.0" }
django-toolshed = "^0.5.3"
django-tailwind = "^3.1.1"
django-browser-reload = "^1.3.0"
django-cacheops = "^6.0"
django-admin-interface = "^0.19.0"
superrequests = "^0.1.1"
praw = "^7.5.0"
hanzidentifier = "^1.0.2"
django-user-agents = "^0.4.0"
django-celery-results = "^2.3.1"
Markdown = "^3.3.7"
django-watson = "^1.6.2"
wagtail = "^5.1.1"
wagtail-code-blog = "0.5.2"
wagtail-markdown = "^0.10.0"
mattermostdriver = "^7.3.2"
django-storages = { extras = ["boto3"], version = "^1.13.2" }
django-webhook = "^0.0.7"
django-custom-error-views = "0.2.3"
django-prometheus = "^2.3.1"
django-waffle = "^4.1.0"
django-admin-site-search = "^0.4.0"
django-admin-shellx = "0.2.4"
channels-redis = "^4.2.0"

[tool.poetry.group.dev.dependencies]
pudb = "^2022.1.3"
pytest = "^7.0.1"
pytest-django = "^4.5.2"
black = "23.7.0"
isort = "^5.12.0"
coverage = "^6.3.1"
factory-boy = "^3.2.1"
mypy = "^1.6.0"
pylint = "2.17.5"
pylint-django = "2.5.3"
pytest-cov = "^3.0.0"
django-stubs = "^4.2.3"
pylint-celery = "^0.3"
Werkzeug = "^2.0.3"
django-coverage-plugin = "^2.0.2"
responses = "^0.18.0"
types-requests = "^2.27.12"
types-python-dateutil = "^2.8.15"
types-Markdown = "^3.3.27"
pyupgrade = "^3.15.0"
django-upgrade = "^1.15.0"
djlint = "^1.34.1"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.pytest.ini_options]
addopts = "--ds=config.settings.test --reuse-db --pdbcls=pudb.debugger:Debugger"
python_files = "tests.py test_*.py"
norecursedirs = ".git */migrations/* */static/* venv .venv .poetry .virtualenv node_modules"

[tool.black]
skip_numeric_underscore_normalization = true
exclude = ".*(venv|virtualenv|.poetry|migrations|node_modules)"

[tool.isort]
skip_glob = "**/migrations/*.py,**/fixtures/*.py,infra/**/*.py"
# https://github.com/psf/black/issues/251#issuecomment-535187912
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
plugins = ["mypy_django_plugin.main"]
exclude = [".venv", "migrations.*"]

[tool.django-stubs]
django_settings_module = "config.settings.test"

[tool.pylint.'MASTER']
load-plugins = "pylint_django, pylint_celery"
ignore = "manage.py"

[tool.pylint.'FORMAT']
max-line-length = 150

[tool.pylint.'MESSAGES CONTROL']
disable = "missing-docstring,invalid-name,logging-fstring-interpolation,fixme,duplicate-code"

[tool.pylint.'DESIGN']
max-parents = 13

[tool.pylint.'SIMILARITIES']
# Minimum lines number of a similarity.
min-similarity-lines = 4
# Ignore comments when computing similarities.
ignore-comments = "yes"
# Ignore docstrings when computing similarities.
ignore-docstrings = "yes"
# Ignore imports when computing similarities.
ignore-imports = "yes"

[tool.djlint]
ignore = "H006,H030,H031,D018"
profile = "django"
preserve_blank_lines = true
use_gitignore = true
format_css = true
format_js = true
